---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.containers.autoupdate: registry
  labels:
    app: harbor-hc
  name: harbor-hc
spec:
  containers:
  - name: ansible-runner
    image: docker.io/adathor/ansible-runner:latest
    command: ["/bin/sh" , "-c"]
    args: [ chmod 600 /root/ansi/ssh-privatekey && ansible-playbook -i /harbor_inv/inventory.ini  /harbor_hc/harbor_health.yml -e "harbor_user=$HARBOR_USER harbor_pw=$HARBOR_PW"]
    env:
    - name: HARBOR_USER
      valueFrom:
        secretKeyRef:
          name: harbor-credentials
          key: harbor-user
    - name: HARBOR_PW
      valueFrom:
        secretKeyRef:
          name: harbor-credentials
          key: harbor-pw
    volumeMounts:
    - name: harbor_key
      mountPath: /root/ansi
      readOnly: false
    - name: harbor-hc-playbook
      mountPath: /harbor_hc
      readOnly: true
    - name: harbor-hc-inventory
      mountPath: /harbor_inv
      readOnly: true
    stdin: true
    tty: true
  volumes:
  - name: harbor_key
    secret:
      secretName: harbor_key
      defaultMode: 384
  - name: harbor-hc-playbook
    configMap:
      name: harbor-hc-playbook
  - name: harbor-hc-inventory
    configMap:
      name: harbor-hc-inventory
  imagePullSecrets:
    - name: harbor-dockerconfig
---
apiVersion: v1
kind: Secret
metadata:
  name: harbor-credentials
data:
  harbor-user: Y2hla2ll
  harbor-pw: QW1lZ2JOVWdvazZlNEtaRUpkdExpYW56Mkdqc3BxZXJoeW51d1FNM2JoYkJpS1ZFejZDQ3R1QWN4Q0hFNVBuWVFrQkgyZ1RTZlZvRXduQmVqdEhhZVN1ZHM3VGhRemp4TXROSEg3Z0p0QmVzYnN6VkxSc1RLZ2RDeFpvdTg4dnE=
---
apiVersion: v1
kind: Secret
metadata:
  name: harbor_key
data:
  ssh-privatekey: LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFNd0FBQUF0emMyZ3RaVwpReU5UVXhPUUFBQUNEdEIrRFRBRTdsN01YVkFmSUtKL1Q0b2RWSW5ScnJkbXNSNllxcFdwOTBxZ0FBQUpBK2FKektQbWljCnlnQUFBQXR6YzJndFpXUXlOVFV4T1FBQUFDRHRCK0RUQUU3bDdNWFZBZklLSi9UNG9kVkluUnJyZG1zUjZZcXBXcDkwcWcKQUFBRURPSDB0SStwMXJmMG12bXpobkI1YjNhVWlhalFqR2plVGcwOFBJSTc1RlF1MEg0Tk1BVHVYc3hkVUI4Z29uOVBpaAoxVWlkR3V0MmF4SHBpcWxhbjNTcUFBQUFDR2hoY21KdmNtaGpBUUlEQkFVPQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K
---
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: harbor-dockerconfig
data:
  .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXIuaW8iOnsidXNlcm5hbWUiOiJhZGF0aG9yIiwicGFzc3dvcmQiOiJkY2tyX3BhdF9CMXFHdWtTRjRPNEp5c3FvYThkckt4Ri1lTVkiLCJhdXRoIjoiWVdSaGRHaHZjanBrWTJ0eVgzQmhkRjlDTVhGSGRXdFRSalJQTkVwNWMzRnZZVGhrY2t0NFJpMWxUVms9In19fQ==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: harbor-hc-playbook
data:
  harbor_health.yml: |
    ---
    - name: Check the status of Harbor registry
      hosts: vegas
      become: true
      tasks:
      - name: Run registry healthcheck
        ansible.builtin.uri: 
          url: 'https://registry.adathor.com/api/v2.0/health'
          user: "{{harbor_user}}"
          password: "{{harbor_pw}}"
          force_basic_auth: yes
          method: GET
          body_format: json
          status_code: [200, 201]
          return_content: true
          validate_certs: yes
          headers:
            Content-Type: application/json
            accept: application/json
        no_log: true
        delegate_to: localhost
        register: robot_out
        ignore_errors: true

      - name: restart harbor
        community.docker.docker_compose:
          project_src: /home/podman_vol/harbor/harbor/
          restarted: true
          state: present
        when: robot_out.status != 200

      - name: Pause for 10 minutes 
        ansible.builtin.pause:
          minutes: 10
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: harbor-hc-inventory
data:
  inventory.ini: |
    [vegas]
    vegas ansible_host=172.168.1.1 

    [vegas:vars]
    ansible_user=adathor
    ansible_ssh_private_key_file=/root/ansi/ssh-privatekey
    ansible_ssh_common_args='-o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
